# Generated by Django 5.1.7 on 2025-04-28 11:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComfyUITask',
            fields=[
                ('task_id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='任务ID')),
                ('task_type', models.CharField(max_length=50, verbose_name='任务类型')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='任务状态')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高')], default='medium', max_length=20, verbose_name='优先级')),
                ('queue_position', models.IntegerField(blank=True, null=True, verbose_name='队列位置')),
                ('progress', models.FloatField(default=0, verbose_name='进度')),
                ('input_data', models.JSONField(default=dict, verbose_name='输入数据')),
                ('output_data', models.JSONField(blank=True, null=True, verbose_name='输出数据')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='处理时间(秒)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'ComfyUI任务',
                'verbose_name_plural': 'ComfyUI任务',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='会话名称')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除，0: 存在，1: 删除')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '会话列表',
                'verbose_name_plural': '会话列表',
            },
        ),
        migrations.CreateModel(
            name='ImageUploadRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_list', models.TextField(verbose_name='图片列表字符串')),
                ('image_url', models.TextField(default='图片结果', verbose_name='图片结果')),
                ('image_name', models.TextField(default='图片名称', verbose_name='图片名称')),
                ('prompt', models.TextField(default='描述语句', verbose_name='描述语句')),
                ('seed_used', models.TextField(default='消耗', verbose_name='消耗')),
                ('model_used', models.TextField(default='模型', verbose_name='模型')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '已失败'), ('retry_pending', '等待重试')], default='completed', max_length=20, verbose_name='状态')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='templateImage.conversationlist', verbose_name='关联会话列表的 ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '图片上传记录',
                'verbose_name_plural': '图片上传记录',
            },
        ),
        migrations.CreateModel(
            name='templateImage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image_name', models.CharField(max_length=255, unique=True, verbose_name='图片名称')),
                ('image_address', models.CharField(max_length=255, unique=True, verbose_name='模板图片的地址')),
                ('description', models.TextField(verbose_name='描述')),
                ('image_method', models.CharField(max_length=100, null=True, verbose_name='图片类别')),
                ('method_sub', models.CharField(max_length=100, null=True, verbose_name='模板图片细分')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('isDelete', models.IntegerField(null=True, verbose_name='是否删除（0正常 1停用）')),
                ('metadata', models.JSONField(blank=True, null=True, verbose_name='元数据')),
                ('related_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_images', to='templateImage.templateimage')),
                ('userImage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '模板图片',
                'verbose_name_plural': '模板图片',
                'db_table': 'template_image',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.CharField(db_index=True, max_length=255, verbose_name='会话ID')),
                ('request_data', models.JSONField(verbose_name='请求数据')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='响应数据')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '已失败'), ('retry_pending', '等待重试')], default='pending', max_length=20, verbose_name='状态')),
                ('service_type', models.CharField(choices=[('chatgpt_image', 'ChatGPT图像生成'), ('gemini_image', 'Gemini图像生成')], max_length=50, verbose_name='服务类型')),
                ('retry_count', models.PositiveSmallIntegerField(default=0, verbose_name='重试次数')),
                ('max_retries', models.PositiveSmallIntegerField(default=3, verbose_name='最大重试次数')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('session_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('client_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.IntegerField(default=0, verbose_name='是否删除，0: 存在，1: 删除')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'conversation_id', 'session_id'], name='templateIma_user_id_e9f723_idx'), models.Index(fields=['user', 'client_id'], name='templateIma_user_id_cdea1f_idx')],
                'unique_together': {('user', 'conversation_id', 'session_id', 'client_id')},
            },
        ),
    ]
